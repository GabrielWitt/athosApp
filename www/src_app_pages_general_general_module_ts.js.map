{"version":3,"file":"src_app_pages_general_general_module_ts.js","mappings":"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","sources":["./src/app/pages/general/forgot-password/forgot-password.component.ts","./src/app/pages/general/general-routing.module.ts","./src/app/pages/general/general.module.ts","./src/app/pages/general/login/login.component.ts","./src/app/pages/general/sign-up/sign-up.component.ts","./src/app/pages/general/verify-email/verify-email.component.ts","./src/app/shared/utilities/route-history.ts","./src/app/shared/utilities/validators.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { FireAuthService } from 'src/app/core/services/modules/fire-auth.service';\nimport { AlertsService } from 'src/app/shared/utilities/alerts';\nimport { RouteHistoryService } from 'src/app/shared/utilities/route-history';\nimport { VerificationFuncService } from 'src/app/shared/utilities/verificationFunc';\n\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss'],\n})\nexport class ForgotPasswordComponent implements OnInit {\n  block = false;\n  loading = false;\n  validateCode = false;\n  messageError: string;\n\n  emailForm: FormGroup;\n  validationMessages\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private auth: FireAuthService,\n    private verification: VerificationFuncService,\n    public history: RouteHistoryService,\n    private alert: AlertsService\n    ) {\n      this.validationMessages = {\n        email: [\n          {type: 'required', message: 'Email requerido'},\n          {type: 'email', message: 'Formato incorrecto'}\n        ]\n      };\n      this.emailForm = this.formBuilder.group({\n        email: new FormControl('', Validators.compose([\n          Validators.required, Validators.email\n        ]))\n      });\n    }\n\n  ngOnInit() {\n\n  }\n\n  EnterSubmit(evt, form){\n    this.verification.EnterSubmit(evt,form,this.loading).then(answer => {\n      if(answer){ this.enviarEmail(this.emailForm.value); }\n    })\n  }\n\n  enviarEmail(form){\n    this.auth.forgotPassword(this.emailForm.value.email).then((done: string) => {\n      console.log(done)\n      this.alert.showAlert('',done + this.emailForm.value.email,'OK').then(() => {\n        this.router.navigateByUrl('general/login');\n      });\n    }).catch(error => { this.messageError = error; });\n  }\n\n  cancel(){\n    this.messageError = '';\n    this.router.navigateByUrl('general/login');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\n\nimport { LoginComponent } from './login/login.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { VerifyEmailComponent } from './verify-email/verify-email.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'forgot-password',\n    component: ForgotPasswordComponent\n  },\n  {\n    path: 'signup',\n    component: SignUpComponent\n  },\n  {\n    path: 'verify-email/:email',\n    component: VerifyEmailComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class GeneralPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { GeneralPageRoutingModule } from './general-routing.module';\n\nimport { LoginComponent } from './login/login.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { VerifyEmailComponent } from './verify-email/verify-email.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SharedModule,\n    ReactiveFormsModule,\n    GeneralPageRoutingModule\n  ],\n  declarations: [\n    LoginComponent,\n    ForgotPasswordComponent,\n    SignUpComponent,\n    VerifyEmailComponent\n  ]\n})\nexport class GeneralPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { FireAuthService } from 'src/app/core/services/modules/fire-auth.service';\nimport { RouteHistoryService } from 'src/app/shared/utilities/route-history';\nimport { VerificationFuncService } from 'src/app/shared/utilities/verificationFunc';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  block = false;\n  loading = true;\n  validateCode = false;\n  messageError: string;\n\n  loginForm: FormGroup;\n  validationMessages\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private auth: FireAuthService,\n    private verification: VerificationFuncService,\n    public history: RouteHistoryService\n    ) { }\n\n  ngOnInit() {\n    this.validationMessages = {\n      email: [\n        {type: 'required', message: 'Email requerido'},\n        {type: 'email', message: 'Formato incorrecto'}\n      ],\n      password: [\n        { type: 'required', message: 'Contraseña requerida'},\n      ]\n    };\n    this.loginForm = this.formBuilder.group({\n      email: new FormControl('', Validators.compose([\n        Validators.required, Validators.email\n      ])),\n      password: new FormControl('', Validators.compose([\n        Validators.required\n      ]))\n    });\n    this.loading = true;\n    this.auth.refreshUser()\n    .then((login: boolean) => {this.loading = login;});\n  }\n\n  EnterSubmit(evt, form){\n    this.verification.EnterSubmit(evt,form,this.loading).then(answer => {\n      if(answer){ this.loginProcess(this.loginForm.value); }\n    })\n  }\n\n  loginProcess(form) {\n    this.messageError = '';\n    this.loading = true;\n    this.auth.login(this.loginForm.value.email,this.loginForm.value.password)\n    .then(() => { setTimeout(() => { this.loading = false; }, 3000); })\n    .catch(error => {\n      this.messageError = error;\n      this.loading = false;\n    })\n  }\n\n  forgotPassword(){\n    this.router.navigateByUrl('general/forgot-password')\n  }\n\n  registrase(){\n    this.router.navigateByUrl('general/signup')\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { User } from 'firebase/auth';\nimport { FireAuthService } from 'src/app/core/services/modules/fire-auth.service';\nimport { AlertsService } from 'src/app/shared/utilities/alerts';\nimport { RouteHistoryService } from 'src/app/shared/utilities/route-history';\nimport { compareValidator, min1digit, min1lowercase, min1specialCharacter, min1uppercase } from 'src/app/shared/utilities/validators';\nimport { VerificationFuncService } from 'src/app/shared/utilities/verificationFunc';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss'],\n})\nexport class SignUpComponent implements OnInit {\n  block = false;\n  loading = false;\n  validateCode = false;\n  messageError: string;\n\n  signUpForm: FormGroup;\n  validationMessages\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private verification: VerificationFuncService,\n    public history: RouteHistoryService,\n    private auth: FireAuthService,\n    private alert: AlertsService\n    ) { }\n\n  ngOnInit() {\n    this.validationMessages = {\n      email: [\n        {type: 'required', message: 'El email es requerido'},\n        {type: 'email', message: 'El email tiene formato incorrecto'}\n      ],\n      name:[ {type: 'required', message: ' Escribe tu nombre'},],\n      lastName:[ {type: 'required', message: ' Escribe tu apellido'},],\n      birthday:[ {type: 'required', message: ' Ingresa tu fecha de nacimiento'},],\n    };\n    this.signUpForm = this.formBuilder.group({\n      email:[null, { validators: [Validators.required, Validators.email] }],\n      name:[null, { validators: [Validators.required, Validators.minLength(2)] }],\n      lastName:[null, { validators: [Validators.required, Validators.minLength(3)] }],\n      birthday:[null, { validators: [Validators.required] }],\n      password1: [null, { validators: [\n        Validators.required,\n        Validators.minLength(8),\n        min1digit,\n        min1lowercase,\n        min1uppercase,\n        min1specialCharacter,\n      ]}],\n      password2: [null, { validators: [Validators.required] }]\n    }, {validators: [compareValidator('password1', 'password2')] });\n  }\n\n  EnterSubmit(evt, form){\n    this.verification.EnterSubmit(evt,form,this.loading).then(answer => {\n      if(answer){ this.signProcess(this.signUpForm.value); }\n    })\n  }\n\n  signProcess(form) {\n    this.messageError = '';\n    this.loading = true;\n    this.auth.registerUser(form.email,form.password1,\n      form.name,form.lastName,form.birthday).then((user: User) => {\n      this.auth.verifyEmail().then((verify: string) => {\n        this.loading = false;\n        this.alert.showAlert('',verify,'OK').then(() => {\n          this.router.navigateByUrl('general/verify-email/'+user.email);\n        });\n      })\n    }).catch(error => { this.messageError = error; this.loading = false; })\n  }\n\n  cancel(){\n    this.messageError = '';\n    this.router.navigateByUrl('general/login')\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from 'firebase/auth';\nimport { FireAuthService } from 'src/app/core/services/modules/fire-auth.service';\nimport { AlertsService } from 'src/app/shared/utilities/alerts';\n\n@Component({\n  selector: 'app-verify-email',\n  templateUrl: './verify-email.component.html',\n  styleUrls: ['./verify-email.component.scss'],\n})\nexport class VerifyEmailComponent implements OnInit {\n  email: string;\n  loading = false;\n  errorMessage = ''\n\n  constructor(\n    private routerParams: ActivatedRoute,\n    private router: Router,\n    private auth: FireAuthService,\n    private alerts: AlertsService \n  ) { }\n\n  ngOnInit() {\n    console.log(this.routerParams.snapshot.params.email)\n    if(this.routerParams.snapshot.params.email){\n      this.email = this.routerParams.snapshot.params.email;\n    }\n  }\n\n  resendEmail(){\n    this.loading = true;\n    this.errorMessage = '';\n    this.auth.verifyEmail().then((done: string) => {\n      this.loading = false;\n      this.alerts.showAlert('', done + ' a ' + this.email, 'OK')\n    }).catch(error => { this.errorMessage = error; })\n  }\n\n  checkUser() {\n    this.loading = true;\n    this.errorMessage = '';\n    this.loading = true;\n    this.auth.signOut().then(done => {\n      this.loading = false;\n      this.router.navigateByUrl('general/login');\n    });\n    this.auth.checkUser();\n  }\n\n  cancel(){\n    this.loading = true;\n    this.errorMessage = '';\n    this.auth.signOut().then(done => {\n      this.loading = false;\n      this.router.navigateByUrl('general/login');\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteHistoryService {\n\n  constructor() { }\n\n  goBack() {\n\n  }\n}\n","import { ValidatorFn, AbstractControl, ValidationErrors, FormGroup, FormControl, FormArray, AsyncValidatorFn } from '@angular/forms';\r\n\r\nimport * as moment from 'moment';\r\nimport { Observable, of, Subject } from 'rxjs';\r\nimport { joinDateTimeInISO8601 } from './time-handler';\r\n\r\ninterface RequiredIfOptionalConf {\r\n  formRoot?: boolean;\r\n}\r\ninterface ArrayAtLeastOneIfOptionalConf {\r\n  formRoot?: boolean;\r\n}\r\n\r\n/** Validates the the string of characters contains at least 1 lowercase character */\r\nexport function min1lowercase(c: FormControl): ValidationErrors | null {\r\n  if (c.value === null) {\r\n    return null; // don't validate empty value\r\n  }\r\n  if (typeof c.value !== 'string') {\r\n    console.warn('min1lowercase validator: value is not a string')\r\n    return { min1lowercase: true };\r\n  }\r\n  const isValid = new RegExp('[a-z]').test(c.value);\r\n  if (!isValid) {\r\n    return { min1lowercase: true }\r\n  }\r\n  return null;\r\n}\r\n\r\n/** Validates the the string of characters contains at least 1 uppercase character */\r\nexport function min1uppercase(c: FormControl): ValidationErrors | null {\r\n  if (c.value === null) {\r\n    return null; // don't validate empty value\r\n  }\r\n  if (typeof c.value !== 'string') {\r\n    console.warn('min1uppercase validator: value is not a string')\r\n    return { min1uppercase: true };\r\n  }\r\n  const isValid = new RegExp('[A-Z]').test(c.value);\r\n  if (!isValid) {\r\n    return { min1uppercase: true }\r\n  }\r\n  return null;\r\n}\r\n\r\n/** Validates the the string of characters contains at least 1 number character */\r\nexport function min1digit(c: FormControl): ValidationErrors | null {\r\n  if (c.value === null) {\r\n    return null; // don't validate empty value\r\n  }\r\n  if (typeof c.value !== 'string') {\r\n    console.warn('min1digit validator: value is not a string')\r\n    return { min1digit: true };\r\n  }\r\n  const isValid = new RegExp('[0-9]').test(c.value);\r\n  if (!isValid) {\r\n    return { min1digit: true }\r\n  }\r\n  return null;\r\n}\r\n\r\n/** Validates the the string of characters contains at least 1 special character */\r\nexport function min1specialCharacter(c: FormControl): ValidationErrors | null {\r\n  if (c.value === null) {\r\n    return null; // don't validate empty value\r\n  }\r\n  if (typeof c.value !== 'string') {\r\n    console.warn('min1specialCharacter validator: value is not a string')\r\n    return { min1specialCharacter: true };\r\n  }\r\n  const isValid = new RegExp('[^((0-9)|(a-z)|(A-Z)|\\s)]').test(c.value);\r\n  if (!isValid) {\r\n    return { min1specialCharacter: true }\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * This Function is intended to validate that to formControl from the same FormGroup have the same value\r\n * Perfect for:\r\n * - Password matching validation\r\n * - Validating against a specific string, declared as a fromControl\r\n * @param controlNameToCompare name of the fromControl of the same formGroup to validate against\r\n */\r\nexport function compareValidator(control1Name: string, control2Name: string): ValidatorFn {\r\n  return (c: FormGroup): ValidationErrors | null => {\r\n    const control1: FormControl = c.get(control1Name).value;\r\n    const control2: FormControl = c.get(control2Name).value;\r\n    if (control1 === null || control2 === null) {\r\n      return null; // don't validate empty value\r\n    }\r\n    if (control1 !== control2) {\r\n      return { compareValidator: true };\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * This Function is intended to validate that all files match at least one of the provided MIME types in the validator function\r\n * For more information check: https://developer.mozilla.org/es/docs/Web/HTTP/Basics_of_HTTP/MIME_types\r\n * @param fileTypes File types MIME can be an array or a single MIME type\r\n */\r\nexport function validFileType(fileTypes: string | string[]): ValidatorFn {\r\n  if (!fileTypes) {\r\n    console.error('Invalid FileType validator, please provide one, using empty string as default');\r\n    fileTypes = '';\r\n  }\r\n  return (c: AbstractControl): ValidationErrors | null => {\r\n    const files: File | FileList = c.value;\r\n    const fileTypesArray: string[] = Array.isArray(fileTypes) ? fileTypes : [fileTypes];\r\n    if (c.value === null || c.value.length === 0) {\r\n      return null; // don't validate empty value\r\n    }\r\n    let filesArray: File[];\r\n    if (files instanceof FileList) { filesArray = Array.from(files); }\r\n    if (files instanceof File) { filesArray = [files]; }\r\n    const isValid = filesArray.every((f: File) => {\r\n      return fileTypesArray.some((t) => t === f.type);\r\n    });\r\n    if (isValid) {\r\n      return null;\r\n    } else {\r\n      return { invalidFileType: true };\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * This Function is intended to validate the maximum valid file size of a File type object\r\n * @param fileSize File size in Bytes\r\n */\r\nexport function maxFileSize(fileSize: number): ValidatorFn {\r\n  return (c: AbstractControl): ValidationErrors | null => {\r\n    if (!fileSize) {\r\n      console.error('Invalid fileSize, please provide one, not performing validation as default');\r\n      return null;\r\n    }\r\n    const files: File | FileList = c.value;\r\n    if (c.value === null || c.value.length === 0) {\r\n      return null; // don't validate empty value\r\n    }\r\n    let filesArray: File[];\r\n    if (files instanceof FileList) { filesArray = Array.from(files); }\r\n    if (files instanceof File) { filesArray = [files]; }\r\n    const isValid = filesArray.every((f: File) => {\r\n      return f.size < fileSize;\r\n    });\r\n    if (isValid) {\r\n      return null;\r\n    } else {\r\n      return { maximumFileSize: true };\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * This Function is intended to validate the maximum or minimum width and height resolution of an image, the\r\n * @param width Image expected minimum or maximum resolution on the X axis\r\n * @param height Image expected minimum or maximum resolution on the Y axis\r\n * @param validationMinOrMax determined if the validation should match above of below the expected X and Y axis values can be 'min' or 'max'\r\n */\r\nexport function imageMinMaxResolution(width: number, height: number, validationMinOrMax: 'min' | 'max'): AsyncValidatorFn {\r\n  return (c: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> => {\r\n    if (isNaN(width) || isNaN(height)) {\r\n      console.error('Invalid width or height value params on validator function, please provide both values correctly');\r\n      return of(null);\r\n    }\r\n    if (!validationMinOrMax) {\r\n      console.error('Invalid validationMinOrMax value params on validator function, please provide a correct value');\r\n      return of(null);\r\n    }\r\n    if (c.value === null) {\r\n      return of(null); // don't validate empty value\r\n    }\r\n    const observable = new Subject<ValidationErrors | null>();\r\n    /** here we validate if the height and width of the loaded image have values greater than the provided by the validator params */\r\n    const validateAsMin = (image: HTMLImageElement) => {\r\n      if (image.height < height || image.width < width) {\r\n        observable.next({\r\n          invalidResolution: true,\r\n          invalidResolutionWidth: image.width,\r\n          invalidResolutionHeight: image.height,\r\n        });\r\n        observable.complete();\r\n        return;\r\n      }\r\n      observable.next(null);\r\n      observable.complete();\r\n    };\r\n    /** here we validate if the height and width of the loaded image have values lower than the provided by the validator params */\r\n    const validateAsMax = (image: HTMLImageElement) => {\r\n      if (image.height > height || image.width > width) {\r\n        observable.next({\r\n          invalidResolution: true,\r\n          invalidResolutionWidth: image.width,\r\n          invalidResolutionHeight: image.height,\r\n        });\r\n        observable.complete();\r\n        return;\r\n      }\r\n      observable.next(null);\r\n      observable.complete();\r\n    };\r\n\r\n    const image = new Image();\r\n    image.src = window.URL.createObjectURL(c.value as File);\r\n    image.onload = () => {\r\n      if (validationMinOrMax === 'min') { validateAsMin(image); }\r\n      if (validationMinOrMax === 'max') { validateAsMax(image); }\r\n      return;\r\n    };\r\n\r\n    return observable;\r\n  };\r\n}\r\n\r\n/**\r\n * This Function is intended to validate 2 date/time on the same FormGroup, checking date1 don't be greater than date2.\r\n * @param controlNameDate1 name of the fromControl for date1\r\n * @param controlNameTime1 name of the fromControl for time1\r\n * @param controlNameDate2 name of the fromControl for date2\r\n * @param controlNameTime2 name of the fromControl for time2\r\n * @param justEvaluateDate indicates if only needs to evaluate date part\r\n * @param validatorProperty in case need a different error property name (default: 'invalidRange')\r\n * @param daysOffSet max amount of days accepted between date1 and date2\r\n */\r\nexport function customValidatorCompareDateGreaterThan(\r\n  controlNameDate1: string,\r\n  controlNameTime1: string,\r\n  controlNameDate2: string,\r\n  controlNameTime2: string,\r\n  justEvaluateDate?: boolean,\r\n  canExecuteThisValidator?: (s: FormGroup) => boolean,\r\n  validatorProperty: string = 'invalidRange',\r\n  validatorPropertyOffset: string = 'invalidOffset',\r\n  daysOffSet?: number\r\n) {\r\n  return (c: FormGroup): ValidationErrors | null => {\r\n    const controlDate1: string = c.get(controlNameDate1).value;\r\n    const controlTime1: string = justEvaluateDate ? null : c.get(controlNameTime1).value;\r\n    const controlDate2: string = c.get(controlNameDate2).value;\r\n    const controlTime2: string = justEvaluateDate ? null : c.get(controlNameTime2).value;\r\n\r\n    if (!controlDate1\r\n      || (justEvaluateDate ? false : !controlTime1)\r\n      || !controlDate2\r\n      || (justEvaluateDate ? false : !controlTime2)) {\r\n        return null;\r\n      }\r\n\r\n    if (canExecuteThisValidator && !canExecuteThisValidator(c)) {\r\n      return null;\r\n    }\r\n\r\n    const startDate = joinDateTimeInISO8601(controlDate1, controlTime1);\r\n    const endDate = joinDateTimeInISO8601(controlDate2, controlTime2);\r\n\r\n    const validatorObj = {};\r\n    validatorObj[validatorProperty] = true;\r\n    if (moment(endDate).isBefore(moment(startDate))) {\r\n      return validatorObj;\r\n    }\r\n    else if (!daysOffSet) {\r\n      return null;\r\n    }\r\n\r\n    const validatorObjOffset = {};\r\n    validatorObjOffset[validatorPropertyOffset] = true;\r\n    return moment.duration(moment(endDate).diff(moment(startDate))).asDays() < daysOffSet ? validatorObjOffset : null;\r\n  };\r\n}\r\n\r\n/**\r\n * This Function is intended to validate 2 date/time on the same FormGroup, checking date1 don't be greater than date2.\r\n * @param controlNameDate1 name of the fromControl for date1\r\n * @param controlNameDate2 name of the fromControl for date2\r\n * @param plusNDays Number of days to include / substract from the difference\r\n * @param validatorProperty in case need a different error property name (default: 'invalidRange')\r\n */\r\nexport function customValidatorCompareDateGreaterThanPlusNDays(\r\n  controlNameDate1: string,\r\n  controlNameDate2: string,\r\n  startDatePlusNDays: number,\r\n  canExecuteThisValidator?: (s: FormGroup) => boolean,\r\n  validatorProperty: string = 'invalidRangeNDays',\r\n) {\r\n  return (c: FormGroup): ValidationErrors | null => {\r\n    const controlDate1: string = c.get(controlNameDate1).value;\r\n    const controlDate2: string = c.get(controlNameDate2).value;\r\n\r\n    if (!controlDate1 || !controlDate2) {\r\n      return null;\r\n    }\r\n\r\n    if (canExecuteThisValidator && !canExecuteThisValidator(c)) {\r\n      return null;\r\n    }\r\n\r\n    const startDate = joinDateTimeInISO8601(controlDate1, null);\r\n    const endDate = joinDateTimeInISO8601(controlDate2, null);\r\n\r\n    const validatorObj = {};\r\n    validatorObj[validatorProperty] = true;\r\n    if (moment(endDate).isBefore(moment(startDate).add(startDatePlusNDays, 'day'))) {\r\n      return validatorObj;\r\n    }\r\n\r\n    return null;\r\n  };\r\n}\r\n\r\n/**\r\n * This Function is intended to evaluate a FormControl is between 2 constant values returned by callbacks\r\n * @param controlNameDate Name of the fromControl for date to evaluated between boundaries\r\n * @param startingDateGetCallback Lower date boundary\r\n * @param endingDateGetCallback Greater date boundary\r\n * @param validatorProperty in case need a different error property name (default: 'invalidDateBetween')\r\n */\r\nexport function customValidatorCompareDateBetweenStaticValues(\r\ncontrolNameDate: string,\r\nstartingDateGetCallback: () => string,\r\nendingDateGetCallback: () => string,\r\nvalidatorProperty: string = 'invalidDateBetween'\r\n) {\r\n  return (c: FormGroup): ValidationErrors | null => {\r\n    const controlDate0 = c.get(controlNameDate).value;\r\n    const controlDate1 = startingDateGetCallback();\r\n    const controlDate2 = endingDateGetCallback();\r\n\r\n    if (!controlDate0 || !controlDate1 || !controlDate2) {\r\n      return null;\r\n    }\r\n\r\n    const validatorObj = {};\r\n    validatorObj[validatorProperty] = true;\r\n    if (moment(controlDate0).isBetween(moment(controlDate1), moment(controlDate2), 'days', '[]')) {\r\n      return null;\r\n    }\r\n\r\n    return validatorObj;\r\n  };\r\n}\r\n\r\n/** Checks diff between controlNameDate and current date be between maxDaysOffSet */\r\nexport function customValidatorDateOffSetNotGreatherThan(\r\n  controlNameDate: string,\r\n  maxDaysOffSet: number,\r\n  validatorPropertyDateOffset: string = 'invalidDateOffset') {\r\n    return (c: FormGroup): ValidationErrors | null => {\r\n      if (!c.get(controlNameDate).value) { return null; }\r\n      const dateValue: string = moment(c.get(controlNameDate).value).format('YYYY-MM-DDT00:00:00');\r\n      const todayValue = moment(moment().format('YYYY-MM-DDT00:00:00'));\r\n      const offset = moment.duration(moment(dateValue).diff(todayValue)).asDays();\r\n      if (offset > maxDaysOffSet) {\r\n        const objReturned = {};\r\n        objReturned[validatorPropertyDateOffset] = true;\r\n        return objReturned;\r\n      }\r\n\r\n      return  null;\r\n    };\r\n  }\r\n\r\n/**\r\n * This Function is intended to validate 2 times on the same FormGroup, checking time1 don't be greater than time2.\r\n * @param controlNameTime1 name of the fromControl for time1\r\n * @param controlNameTime2 name of the fromControl for time2\r\n * @param minutesOffSet max amount of minutes accepted between time1 and time2\r\n * @param validatorProperty in case need a different error property name (default: 'invalidRange')\r\n */\r\nexport function customValidatorCompareTimeGreaterThan(\r\n  controlNameTime1: string,\r\n  controlNameTime2: string,\r\n  minutesOffSet?: number,\r\n  validatorProperty: string = 'invalidRange',\r\n  validatorPropertyOffset: string = 'invalidOffset',\r\n  canExecuteThisValidator?: (s: FormGroup) => boolean,\r\n) {\r\n  return (c: FormGroup): ValidationErrors | null => {\r\n    const controlTime1: string = c.get(controlNameTime1).value;\r\n    const controlTime2: string = c.get(controlNameTime2).value;\r\n\r\n    if (!controlTime1 || !controlTime2) {\r\n      return null;\r\n    }\r\n\r\n    if (canExecuteThisValidator && !canExecuteThisValidator(c)) {\r\n      return null;\r\n    }\r\n\r\n    const startDate = moment(controlTime1, 'HH:mm');\r\n    const endDate = moment(controlTime2, 'HH:mm');\r\n\r\n    const validatorObj = {};\r\n    validatorObj[validatorProperty] = true;\r\n    if (moment(endDate).isBefore(moment(startDate))) {\r\n      return validatorObj;\r\n    }\r\n    else if (!minutesOffSet) {\r\n      return null;\r\n    }\r\n\r\n    const validatorObjOffset = {};\r\n    validatorObjOffset[validatorPropertyOffset] = true;\r\n    return moment.duration(moment(endDate).diff(moment(startDate))).asMinutes() > minutesOffSet ? validatorObjOffset : null;\r\n  };\r\n}\r\n\r\n/**\r\n * This Function is intended to validate 2 times on the same FormGroup, checking time1 don't be greater than time2.\r\n * @param controlNameTime1 name of the fromControl for time1\r\n * @param controlNameTime2 name of the fromControl for time2\r\n * @param minutesOffSet max amount of minutes accepted between time1 and time2\r\n * @param validatorProperty in case need a different error property name (default: 'invalidRange')\r\n */\r\nexport function customValidatorTimeRange(\r\n  controlNameTime: string,\r\n  rangeTime1: string,\r\n  rangeTime2: string,\r\n  validatorProperty: string = 'invalidTimeRange',\r\n  canExecuteThisValidator?: (s: FormGroup) => boolean,\r\n) {\r\n  return (c: FormGroup): ValidationErrors | null => {\r\n    const controlTime: string = c.get(controlNameTime).value;\r\n    if (!controlTime) { return null; }\r\n\r\n    if (canExecuteThisValidator && !canExecuteThisValidator(c)) {\r\n      return null;\r\n    }\r\n\r\n    const startDate = moment(controlTime, 'HH:mm');\r\n    const range1 = moment(rangeTime1, 'HH:mm').add(-1, 'minute');\r\n    const range2 = moment(rangeTime2, 'HH:mm').add(1, 'minute');\r\n\r\n    const validatorObj = {};\r\n    validatorObj[validatorProperty] = true;\r\n    if (!startDate.isBetween(range1, range2)) {\r\n      return validatorObj;\r\n    }\r\n\r\n    return null;\r\n  };\r\n}\r\n\r\n/**\r\n * This Function is intended to validate a formGroup as a valid date under a specific year of age\r\n * @param dateFieldName name of the fromControl of the same formGroup to validate the Date field YYYY-MM-(DD)\r\n * @param monthFieldName name of the fromControl of the same formGroup to validate the Month field YYYY-(MM)-DD\r\n * @param yearFieldName name of the fromControl of the same formGroup to validate the Year field (YYYY)-MM-DD\r\n * @param ageValidity amount of age to validate against.\r\n */\r\nexport function requireAgeGroupToBeUnder(dateFieldName: string, monthFieldName: string, yearFieldName: string, ageValidity: number): ValidatorFn {\r\n  return (c: FormGroup): ValidationErrors | null => {\r\n    const dob = moment.utc();\r\n    // doesn't guaranty a true validation due to relative date from the host machine clock\r\n    const AgeDate = moment.utc().subtract(ageValidity, 'y');\r\n    dob.set({\r\n      year: parseInt(c.get(yearFieldName).value),\r\n      month: parseInt(c.get(monthFieldName).value) - 1, // moment month is from 0 to 11 and select options goes from 1 to 12\r\n      date: parseInt(c.get(dateFieldName).value),\r\n      hour: 0,\r\n      minute: 0,\r\n      second: 0,\r\n    });\r\n    if (!dob.isValid()) {\r\n      return null; // don't validate empty value\r\n    }\r\n\r\n    if (dob.isAfter(AgeDate) && dob.isBefore(moment.utc())) {\r\n      return null;\r\n    } else {\r\n      return { invalid_under_age: true };\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * This Function is intended to validate a formGroup as a valid date over a specific year of age\r\n * @param dateFieldName name of the fromControl of the same formGroup to validate the Date field YYYY-MM-(DD)\r\n * @param monthFieldName name of the fromControl of the same formGroup to validate the Month field YYYY-(MM)-DD\r\n * @param yearFieldName name of the fromControl of the same formGroup to validate the Year field (YYYY)-MM-DD\r\n * @param ageValidity amount of age to validate against.\r\n */\r\nexport function requireAgeGroupToBeOver(dateFieldName: string, monthFieldName: string, yearFieldName: string, ageValidity: number): ValidatorFn {\r\n  return (c: FormGroup): ValidationErrors | null => {\r\n    const dob = moment.utc();\r\n    // doesn't guaranty a true validation due to relative date from the host machine clock\r\n    const AgeDate = moment.utc().subtract(ageValidity, 'y');\r\n    dob.set({\r\n      year: parseInt(c.get(yearFieldName).value),\r\n      month: parseInt(c.get(monthFieldName).value) - 1, // moment month is from 0 to 11 and select options goes from 1 to 12\r\n      date: parseInt(c.get(dateFieldName).value),\r\n      hour: 0,\r\n      minute: 0,\r\n      second: 0,\r\n    });\r\n    if (!dob.isValid()) {\r\n      return null; // don't validate empty value\r\n    }\r\n\r\n    if (dob.isBefore(AgeDate)) {\r\n      return null;\r\n    } else {\r\n      return { invalid_over_age: true };\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * This Function is intended to validate a formControl as required if another formControl from the same FormGroup has a truthy value\r\n * @param controlNameToEvaluate name or names of the fromControl of the same formGroup to validate against\r\n * @param controlNamesToBeRequired array name of fromControls of the same formGroup to validate against\r\n * @param optionalConf optional params to change validation behavior\r\n * - formRoot: change the perspective of the controlNameToEvaluate log from the root of the formGroup\r\n */\r\nexport function requiredIf(controlNameToEvaluate: string | string[], controlNamesToBeRequired: string[], optionalConf?: RequiredIfOptionalConf): ValidatorFn {\r\n  const singleControlName = (c: FormGroup, controlName: string) => {\r\n    let controlValue = c.get(controlName)?.value;\r\n    if (optionalConf?.formRoot) {\r\n      controlValue = c.root?.get(controlName)?.value;\r\n    }\r\n    const invalidControls: ValidationErrors = {};\r\n    if (controlValue === null) {\r\n      return null; // don't validate empty value\r\n    }\r\n    // This \"if\" statement, is what it's been test here to see if the controlNamesToBeRequired should be evaluated\r\n    if (controlValue) {\r\n      if (controlNamesToBeRequired?.length > 0) {\r\n        /** @param controlNamesToBeRequired if at least one is Falsy, then mark with error */\r\n        for (const requiredControl of controlNamesToBeRequired) {\r\n          const value = c.get(requiredControl).value;\r\n          if (value === null || value === undefined || value === false || value === '' || value?.length === 0) {\r\n            invalidControls[requiredControl] = true;\r\n          }\r\n        }\r\n        if (Object.keys(invalidControls)?.length > 0) {\r\n          return { requiredIf: { requiredControls: invalidControls } };\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n  return (c: FormGroup): ValidationErrors | null => {\r\n    if (Array.isArray(controlNameToEvaluate)) {\r\n      const hasError = controlNameToEvaluate.some((controlName) => {\r\n        return singleControlName(c, controlName);\r\n      });\r\n      return hasError ? { requiredIf: true } : null;\r\n    } else {\r\n      return singleControlName(c, controlNameToEvaluate);\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * This Function is intended to validate a formControl as required if another formControl from the same FormGroup has a Falsy value\r\n * @param controlNameToEvaluate name of the fromControl of the same formGroup to validate against\r\n * @param controlNamesToBeRequired array name of fromControls of the same formGroup to validate against\r\n */\r\nexport function requiredIfNot(controlNameToEvaluate: string, controlNamesToBeRequired: string[]): ValidatorFn {\r\n  return (c: FormGroup): ValidationErrors | null => {\r\n    const controlValue = c.get(controlNameToEvaluate).value;\r\n    const invalidControls: ValidationErrors = {};\r\n    if (controlValue === null || controlValue === undefined || controlValue === false || controlValue === '' || controlValue?.length === 0) {\r\n      if (controlNamesToBeRequired?.length > 0) {\r\n        /** @param controlNamesToBeRequired if at least one is Falsy, then mark with error */\r\n        for (const controlName of controlNamesToBeRequired) {\r\n          const value = c.get(controlName).value;\r\n          if (value === null || value === undefined || value === false || value === '' || value?.length === 0) {\r\n            invalidControls[controlName] = true;\r\n          }\r\n        }\r\n        if (Object.keys(invalidControls)?.length > 0) {\r\n          return { requiredIfNot: { requiredControls: invalidControls } };\r\n        }\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * This Function is intended to validate if a FormArray contains at least 1 value that matches the given expression\r\n * @param expression An optional expression to handle how each value of the FormArray should be test as valid\r\n */\r\nexport function arrayAtLeastOneIsRequired(expression?: (control?: AbstractControl) => boolean): ValidatorFn {\r\n  return (c: FormArray): ValidationErrors | null => {\r\n    if (c.value === null) {\r\n      return null;\r\n    }\r\n    let isValid = false;\r\n    if (c.controls.length > 0) {\r\n      if (expression) {\r\n        isValid = c.controls.some(expression);\r\n      } else {\r\n        isValid = c.controls.some(control => control.value);\r\n      }\r\n\r\n      return isValid ? null : { arrayAtLeastOneIsRequired: true };\r\n    }\r\n    return null;\r\n  };\r\n}\r\n\r\n/**\r\n * This Function is intended to validate if a FormArray contains at least 1 value that matches the given expression\r\n * @param controlNameToEvaluate name of the fromControl of the same formGroup to validate against\r\n * @param expression An optional expression to handle how each value of the FormArray should be test as valid\r\n * @param optionalConf optional params to change validation behavior\r\n * - formRoot: change the perspective of the controlNameToEvaluate log from the root of the formGroup\r\n */\r\nexport function arrayAtLeastOneIf(controlNameToEvaluate: string, expression: (control?: AbstractControl) => boolean, optionalConf?: ArrayAtLeastOneIfOptionalConf): ValidatorFn {\r\n  return (c: FormArray): ValidationErrors | null => {\r\n    let controlValue = c.get(controlNameToEvaluate)?.value;\r\n    if (optionalConf?.formRoot) {\r\n      controlValue = c.root?.get(controlNameToEvaluate)?.value;\r\n    }\r\n    if (controlValue === null) {\r\n      return null;\r\n    }\r\n    if (controlValue) {\r\n      let isValid = false;\r\n      if (c.controls.length > 0) {\r\n        if (expression) {\r\n          isValid = c.controls.some(expression);\r\n        } else {\r\n          isValid = c.controls.some(control => control.value);\r\n        }\r\n        return isValid ? null : { arrayAtLeastOneIf: true };\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n}\r\n\r\n/**\r\n * This Function is intended to validate if a FormArray contains at least 1 value that matches the given expression and the controlNameToEvaluate has a falsy value\r\n * @param controlNameToEvaluate name of the fromControl of the same formGroup to validate against\r\n * @param expression An optional expression to handle how each value of the FormArray should be test as valid\r\n * @param optionalConf optional params to change validation behavior\r\n * - formRoot: change the perspective of the controlNameToEvaluate log from the root of the formGroup\r\n */\r\nexport function arrayAtLeastOneIfNot(controlNameToEvaluate: string, expression: (control?: AbstractControl) => boolean, optionalConf?: ArrayAtLeastOneIfOptionalConf): ValidatorFn {\r\n  return (c: FormArray): ValidationErrors | null => {\r\n    let controlValue = c.get(controlNameToEvaluate)?.value;\r\n    if (optionalConf?.formRoot) {\r\n      controlValue = c.root?.get(controlNameToEvaluate)?.value;\r\n    }\r\n    if (controlValue === null) {\r\n      return null;\r\n    }\r\n    if (controlValue === null || controlValue === undefined || controlValue === false || controlValue === '' || controlValue?.length === 0) {\r\n      let isValid = false;\r\n      if (c.controls.length > 0) {\r\n        if (expression) {\r\n          isValid = c.controls.some(expression);\r\n        } else {\r\n          isValid = c.controls.some(control => control.value);\r\n        }\r\n        return isValid ? null : { arrayAtLeastOneIf: true };\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n}\r\n\r\n/** Validate the value don't be equal to valueToCompare */\r\nexport function customValidatorNotEqualTo(valueToCompare: string, validatorProperty: string = 'valueEqualTo'): ValidatorFn {\r\n  return (c: AbstractControl): ValidationErrors | null => {\r\n    if (!valueToCompare || c.value === null || c.value.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    const validatorObj = {};\r\n    validatorObj[validatorProperty] = true;\r\n    return c.value === valueToCompare ? validatorObj : null;\r\n  };\r\n}\r\n\r\n/** Validates if the value as a whole number, it access values in string and number format */\r\nexport function wholeNumberRequired(c: FormControl): ValidationErrors | null {\r\n  if (c.value === null) {\r\n    return null; // don't validate empty value\r\n  }\r\n  const validateNumber = (value: number) => {\r\n    if (value % 1 !== 0) {\r\n      return { wholeNumberRequired: { notAWholeNumber: true }};\r\n    }\r\n    return null;\r\n  };\r\n  if (typeof c.value === 'string') {\r\n    return validateNumber(parseFloat(c.value));\r\n  }\r\n  if (typeof c.value === 'number') {\r\n    return validateNumber(c.value);\r\n  }\r\n  return { wholeNumberRequired: { notANumber: true } };\r\n}\r\n\r\n/**\r\n * This Function is intended to validate 2 date/time on the same FormGroup, checking date1 don't be greater than date2.\r\n * @param controlsToEvaluate name of Controls inside group to evaluate\r\n * @param validatorProperty in case need a different error property name (default: 'AtLeastAControlSet')\r\n */\r\nexport function customValidatorAtLeastAControlSet(\r\n  controlsToEvaluate: string[],\r\n  validatorProperty: string = 'AtLeastAControlSet'\r\n) {\r\n  return (c: FormGroup): ValidationErrors | null => {\r\n    if (controlsToEvaluate.filter(controlName => {\r\n      const controlValue: string = c.get(controlName).value;\r\n      return controlValue;\r\n    }).length > 0) {\r\n      return null;\r\n    }\r\n\r\n    const validatorReturn = {};\r\n    validatorReturn[validatorProperty] = true;\r\n    return validatorReturn;\r\n  };\r\n}\r\n\r\n/**\r\n * This Function is intended to validate a formControl as required if another formControl from the same FormGroup has a truthy value\r\n * @param controlsToValidateCallback callback returns array of fields required\r\n * @param validatorProperty field name of FormGroup's error object\r\n */\r\nexport function requiredIf2(controlsToValidateCallback: (c: FormGroup) => string[], validatorProperty: string = 'requiredIf2'): ValidatorFn {\r\n  return (c: FormGroup): ValidationErrors | null => {\r\n    const controlNamesToBeRequired = controlsToValidateCallback(c);\r\n    if (controlNamesToBeRequired && controlNamesToBeRequired.length > 0) {\r\n      const invalidControls: ValidationErrors = {};\r\n      if (controlNamesToBeRequired?.length > 0) {\r\n        for (const requiredControl of controlNamesToBeRequired) {\r\n          const value = c.get(requiredControl)?.value;\r\n          if (value === null || value === undefined || value === false || value === '' || value?.length === 0) {\r\n            invalidControls[requiredControl] = true;\r\n          }\r\n        }\r\n        if (Object.keys(invalidControls)?.length > 0) {\r\n          const validatorObj = {};\r\n          validatorObj[validatorProperty] = invalidControls;\r\n          return validatorObj;\r\n        }\r\n      }\r\n    }\r\n\r\n    return null;\r\n  };\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}